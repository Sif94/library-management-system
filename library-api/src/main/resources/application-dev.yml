spring:
  cache:
    type: redis
    cache-names:
      - books
      - booksPages
    redis:
      time-to-live: 600000  # 10 minutes in milliseconds
      cache-null-values: false
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    url: ${DB_URL}
    user: ${DB_USER}
    password: ${DB_PASSWORD}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:9090/realms/library-realm"

server:
  port: 8088

rabbitmq:
  exchange:
    name: "email_exchange"
  queue:
    name: "queue_name"
  routing-key: "email_routing_key"


# application.properties or application.yml
management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans


application:
  file:
    uploads:
      photos-output-path: ./uploads
  allowed:
    origins: "http://localhost:3000"